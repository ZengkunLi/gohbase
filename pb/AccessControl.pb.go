// Code generated by protoc-gen-go.
// source: AccessControl.proto
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

*
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

It is generated from these files:
	AccessControl.proto
	Admin.proto
	Authentication.proto
	Cell.proto
	Client.proto
	ClusterId.proto
	ClusterStatus.proto
	Comparator.proto
	Encryption.proto
	ErrorHandling.proto
	Filter.proto
	FS.proto
	HBase.proto
	HFile.proto
	LoadBalancer.proto
	MapReduce.proto
	MultiRowMutation.proto
	PingProtocol.proto
	Quota.proto
	RowProcessor.proto
	RPC.proto
	Snapshot.proto
	TestProcedure.proto
	Tracing.proto
	VisibilityLabels.proto
	WAL.proto
	ZooKeeper.proto

It has these top-level messages:
	Permission
	TablePermission
	NamespacePermission
	GlobalPermission
	UserPermission
	UsersAndPermissions
	GrantRequest
	GrantResponse
	RevokeRequest
	RevokeResponse
	GetUserPermissionsRequest
	GetUserPermissionsResponse
	CheckPermissionsRequest
	CheckPermissionsResponse
	GetRegionInfoRequest
	GetRegionInfoResponse
	GetStoreFileRequest
	GetStoreFileResponse
	GetOnlineRegionRequest
	GetOnlineRegionResponse
	OpenRegionRequest
	OpenRegionResponse
	WarmupRegionRequest
	WarmupRegionResponse
	CloseRegionRequest
	CloseRegionResponse
	FlushRegionRequest
	FlushRegionResponse
	SplitRegionRequest
	SplitRegionResponse
	CompactRegionRequest
	CompactRegionResponse
	UpdateFavoredNodesRequest
	UpdateFavoredNodesResponse
	MergeRegionsRequest
	MergeRegionsResponse
	WALEntry
	ReplicateWALEntryRequest
	ReplicateWALEntryResponse
	RollWALWriterRequest
	RollWALWriterResponse
	StopServerRequest
	StopServerResponse
	GetServerInfoRequest
	ServerInfo
	GetServerInfoResponse
	UpdateConfigurationRequest
	UpdateConfigurationResponse
	AuthenticationKey
	TokenIdentifier
	Token
	GetAuthenticationTokenRequest
	GetAuthenticationTokenResponse
	WhoAmIRequest
	WhoAmIResponse
	Cell
	KeyValue
	Authorizations
	CellVisibility
	Column
	Get
	Result
	GetRequest
	GetResponse
	Condition
	MutationProto
	MutateRequest
	MutateResponse
	Scan
	ScanRequest
	Cursor
	ScanResponse
	BulkLoadHFileRequest
	BulkLoadHFileResponse
	DelegationToken
	PrepareBulkLoadRequest
	PrepareBulkLoadResponse
	CleanupBulkLoadRequest
	CleanupBulkLoadResponse
	CoprocessorServiceCall
	CoprocessorServiceResult
	CoprocessorServiceRequest
	CoprocessorServiceResponse
	Action
	RegionAction
	RegionLoadStats
	MultiRegionLoadStats
	ResultOrException
	RegionActionResult
	MultiRequest
	MultiResponse
	ClusterId
	RegionState
	RegionInTransition
	StoreSequenceId
	RegionStoreSequenceIds
	RegionLoad
	ReplicationLoadSink
	ReplicationLoadSource
	ServerLoad
	LiveServerInfo
	ClusterStatus
	Comparator
	ByteArrayComparable
	BinaryComparator
	LongComparator
	BinaryPrefixComparator
	BitComparator
	NullComparator
	RegexStringComparator
	SubstringComparator
	WrappedKey
	StackTraceElementMessage
	GenericExceptionMessage
	ForeignExceptionMessage
	Filter
	ColumnCountGetFilter
	ColumnPaginationFilter
	ColumnPrefixFilter
	ColumnRangeFilter
	CompareFilter
	DependentColumnFilter
	FamilyFilter
	FilterList
	FilterWrapper
	FirstKeyOnlyFilter
	FirstKeyValueMatchingQualifiersFilter
	FuzzyRowFilter
	InclusiveStopFilter
	KeyOnlyFilter
	MultipleColumnPrefixFilter
	PageFilter
	PrefixFilter
	QualifierFilter
	RandomRowFilter
	RowFilter
	SingleColumnValueExcludeFilter
	SingleColumnValueFilter
	SkipFilter
	TimestampsFilter
	ValueFilter
	WhileMatchFilter
	FilterAllFilter
	RowRange
	MultiRowRangeFilter
	HBaseVersionFileContent
	Reference
	TableName
	TableSchema
	TableState
	ColumnFamilySchema
	RegionInfo
	FavoredNodes
	RegionSpecifier
	TimeRange
	ColumnFamilyTimeRange
	ServerName
	Coprocessor
	NameStringPair
	NameBytesPair
	BytesBytesPair
	NameInt64Pair
	SnapshotDescription
	ProcedureDescription
	EmptyMsg
	LongMsg
	DoubleMsg
	BigDecimalMsg
	UUID
	NamespaceDescriptor
	VersionInfo
	RegionServerInfo
	FileInfoProto
	FileTrailerProto
	LoadBalancerState
	ScanMetrics
	TableSnapshotRegionSplit
	MultiRowMutationProcessorRequest
	MultiRowMutationProcessorResponse
	MutateRowsRequest
	MutateRowsResponse
	PingRequest
	PingResponse
	CountRequest
	CountResponse
	IncrementCountRequest
	IncrementCountResponse
	HelloRequest
	HelloResponse
	NoopRequest
	NoopResponse
	TimedQuota
	Throttle
	ThrottleRequest
	Quotas
	QuotaUsage
	SpaceQuota
	SpaceLimitRequest
	SpaceQuotaStatus
	SpaceQuotaSnapshot
	ProcessRequest
	ProcessResponse
	UserInformation
	ConnectionHeader
	CellBlockMeta
	ExceptionResponse
	RequestHeader
	ResponseHeader
	SnapshotFileInfo
	SnapshotRegionManifest
	SnapshotDataManifest
	TestTableDDLStateData
	RPCTInfo
	VisibilityLabelsRequest
	VisibilityLabel
	VisibilityLabelsResponse
	SetAuthsRequest
	UserAuthorizations
	MultiUserAuthorizations
	GetAuthsRequest
	GetAuthsResponse
	ListLabelsRequest
	ListLabelsResponse
	WALHeader
	WALKey
	FamilyScope
	CompactionDescriptor
	FlushDescriptor
	StoreDescriptor
	BulkLoadDescriptor
	RegionEventDescriptor
	WALTrailer
	MetaRegionServer
	Master
	ClusterUp
	SplitLogTask
	DeprecatedTableState
	TableCF
	ReplicationPeer
	ReplicationState
	ReplicationHLogPosition
	SwitchState
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type Permission_Action int32

const (
	Permission_READ   Permission_Action = 0
	Permission_WRITE  Permission_Action = 1
	Permission_EXEC   Permission_Action = 2
	Permission_CREATE Permission_Action = 3
	Permission_ADMIN  Permission_Action = 4
)

var Permission_Action_name = map[int32]string{
	0: "READ",
	1: "WRITE",
	2: "EXEC",
	3: "CREATE",
	4: "ADMIN",
}
var Permission_Action_value = map[string]int32{
	"READ":   0,
	"WRITE":  1,
	"EXEC":   2,
	"CREATE": 3,
	"ADMIN":  4,
}

func (x Permission_Action) Enum() *Permission_Action {
	p := new(Permission_Action)
	*p = x
	return p
}
func (x Permission_Action) String() string {
	return proto.EnumName(Permission_Action_name, int32(x))
}
func (x *Permission_Action) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Permission_Action_value, data, "Permission_Action")
	if err != nil {
		return err
	}
	*x = Permission_Action(value)
	return nil
}
func (Permission_Action) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Permission_Type int32

const (
	Permission_Global    Permission_Type = 1
	Permission_Namespace Permission_Type = 2
	Permission_Table     Permission_Type = 3
)

var Permission_Type_name = map[int32]string{
	1: "Global",
	2: "Namespace",
	3: "Table",
}
var Permission_Type_value = map[string]int32{
	"Global":    1,
	"Namespace": 2,
	"Table":     3,
}

func (x Permission_Type) Enum() *Permission_Type {
	p := new(Permission_Type)
	*p = x
	return p
}
func (x Permission_Type) String() string {
	return proto.EnumName(Permission_Type_name, int32(x))
}
func (x *Permission_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Permission_Type_value, data, "Permission_Type")
	if err != nil {
		return err
	}
	*x = Permission_Type(value)
	return nil
}
func (Permission_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1} }

type Permission struct {
	Type                *Permission_Type     `protobuf:"varint,1,req,name=type,enum=pb.Permission_Type" json:"type,omitempty"`
	GlobalPermission    *GlobalPermission    `protobuf:"bytes,2,opt,name=global_permission,json=globalPermission" json:"global_permission,omitempty"`
	NamespacePermission *NamespacePermission `protobuf:"bytes,3,opt,name=namespace_permission,json=namespacePermission" json:"namespace_permission,omitempty"`
	TablePermission     *TablePermission     `protobuf:"bytes,4,opt,name=table_permission,json=tablePermission" json:"table_permission,omitempty"`
	XXX_unrecognized    []byte               `json:"-"`
}

func (m *Permission) Reset()                    { *m = Permission{} }
func (m *Permission) String() string            { return proto.CompactTextString(m) }
func (*Permission) ProtoMessage()               {}
func (*Permission) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Permission) GetType() Permission_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Permission_Global
}

func (m *Permission) GetGlobalPermission() *GlobalPermission {
	if m != nil {
		return m.GlobalPermission
	}
	return nil
}

func (m *Permission) GetNamespacePermission() *NamespacePermission {
	if m != nil {
		return m.NamespacePermission
	}
	return nil
}

func (m *Permission) GetTablePermission() *TablePermission {
	if m != nil {
		return m.TablePermission
	}
	return nil
}

type TablePermission struct {
	TableName        *TableName          `protobuf:"bytes,1,opt,name=table_name,json=tableName" json:"table_name,omitempty"`
	Family           []byte              `protobuf:"bytes,2,opt,name=family" json:"family,omitempty"`
	Qualifier        []byte              `protobuf:"bytes,3,opt,name=qualifier" json:"qualifier,omitempty"`
	Action           []Permission_Action `protobuf:"varint,4,rep,name=action,enum=pb.Permission_Action" json:"action,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *TablePermission) Reset()                    { *m = TablePermission{} }
func (m *TablePermission) String() string            { return proto.CompactTextString(m) }
func (*TablePermission) ProtoMessage()               {}
func (*TablePermission) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *TablePermission) GetTableName() *TableName {
	if m != nil {
		return m.TableName
	}
	return nil
}

func (m *TablePermission) GetFamily() []byte {
	if m != nil {
		return m.Family
	}
	return nil
}

func (m *TablePermission) GetQualifier() []byte {
	if m != nil {
		return m.Qualifier
	}
	return nil
}

func (m *TablePermission) GetAction() []Permission_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

type NamespacePermission struct {
	NamespaceName    []byte              `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName" json:"namespace_name,omitempty"`
	Action           []Permission_Action `protobuf:"varint,2,rep,name=action,enum=pb.Permission_Action" json:"action,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *NamespacePermission) Reset()                    { *m = NamespacePermission{} }
func (m *NamespacePermission) String() string            { return proto.CompactTextString(m) }
func (*NamespacePermission) ProtoMessage()               {}
func (*NamespacePermission) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *NamespacePermission) GetNamespaceName() []byte {
	if m != nil {
		return m.NamespaceName
	}
	return nil
}

func (m *NamespacePermission) GetAction() []Permission_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

type GlobalPermission struct {
	Action           []Permission_Action `protobuf:"varint,1,rep,name=action,enum=pb.Permission_Action" json:"action,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *GlobalPermission) Reset()                    { *m = GlobalPermission{} }
func (m *GlobalPermission) String() string            { return proto.CompactTextString(m) }
func (*GlobalPermission) ProtoMessage()               {}
func (*GlobalPermission) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GlobalPermission) GetAction() []Permission_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

type UserPermission struct {
	User             []byte      `protobuf:"bytes,1,req,name=user" json:"user,omitempty"`
	Permission       *Permission `protobuf:"bytes,3,req,name=permission" json:"permission,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *UserPermission) Reset()                    { *m = UserPermission{} }
func (m *UserPermission) String() string            { return proto.CompactTextString(m) }
func (*UserPermission) ProtoMessage()               {}
func (*UserPermission) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *UserPermission) GetUser() []byte {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UserPermission) GetPermission() *Permission {
	if m != nil {
		return m.Permission
	}
	return nil
}

// *
// Content of the /hbase/acl/<table or namespace> znode.
type UsersAndPermissions struct {
	UserPermissions  []*UsersAndPermissions_UserPermissions `protobuf:"bytes,1,rep,name=user_permissions,json=userPermissions" json:"user_permissions,omitempty"`
	XXX_unrecognized []byte                                 `json:"-"`
}

func (m *UsersAndPermissions) Reset()                    { *m = UsersAndPermissions{} }
func (m *UsersAndPermissions) String() string            { return proto.CompactTextString(m) }
func (*UsersAndPermissions) ProtoMessage()               {}
func (*UsersAndPermissions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *UsersAndPermissions) GetUserPermissions() []*UsersAndPermissions_UserPermissions {
	if m != nil {
		return m.UserPermissions
	}
	return nil
}

type UsersAndPermissions_UserPermissions struct {
	User             []byte        `protobuf:"bytes,1,req,name=user" json:"user,omitempty"`
	Permissions      []*Permission `protobuf:"bytes,2,rep,name=permissions" json:"permissions,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *UsersAndPermissions_UserPermissions) Reset()         { *m = UsersAndPermissions_UserPermissions{} }
func (m *UsersAndPermissions_UserPermissions) String() string { return proto.CompactTextString(m) }
func (*UsersAndPermissions_UserPermissions) ProtoMessage()    {}
func (*UsersAndPermissions_UserPermissions) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{5, 0}
}

func (m *UsersAndPermissions_UserPermissions) GetUser() []byte {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UsersAndPermissions_UserPermissions) GetPermissions() []*Permission {
	if m != nil {
		return m.Permissions
	}
	return nil
}

type GrantRequest struct {
	UserPermission           *UserPermission `protobuf:"bytes,1,req,name=user_permission,json=userPermission" json:"user_permission,omitempty"`
	MergeExistingPermissions *bool           `protobuf:"varint,2,opt,name=merge_existing_permissions,json=mergeExistingPermissions,def=0" json:"merge_existing_permissions,omitempty"`
	XXX_unrecognized         []byte          `json:"-"`
}

func (m *GrantRequest) Reset()                    { *m = GrantRequest{} }
func (m *GrantRequest) String() string            { return proto.CompactTextString(m) }
func (*GrantRequest) ProtoMessage()               {}
func (*GrantRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

const Default_GrantRequest_MergeExistingPermissions bool = false

func (m *GrantRequest) GetUserPermission() *UserPermission {
	if m != nil {
		return m.UserPermission
	}
	return nil
}

func (m *GrantRequest) GetMergeExistingPermissions() bool {
	if m != nil && m.MergeExistingPermissions != nil {
		return *m.MergeExistingPermissions
	}
	return Default_GrantRequest_MergeExistingPermissions
}

type GrantResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GrantResponse) Reset()                    { *m = GrantResponse{} }
func (m *GrantResponse) String() string            { return proto.CompactTextString(m) }
func (*GrantResponse) ProtoMessage()               {}
func (*GrantResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type RevokeRequest struct {
	UserPermission   *UserPermission `protobuf:"bytes,1,req,name=user_permission,json=userPermission" json:"user_permission,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *RevokeRequest) Reset()                    { *m = RevokeRequest{} }
func (m *RevokeRequest) String() string            { return proto.CompactTextString(m) }
func (*RevokeRequest) ProtoMessage()               {}
func (*RevokeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *RevokeRequest) GetUserPermission() *UserPermission {
	if m != nil {
		return m.UserPermission
	}
	return nil
}

type RevokeResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *RevokeResponse) Reset()                    { *m = RevokeResponse{} }
func (m *RevokeResponse) String() string            { return proto.CompactTextString(m) }
func (*RevokeResponse) ProtoMessage()               {}
func (*RevokeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type GetUserPermissionsRequest struct {
	Type             *Permission_Type `protobuf:"varint,1,opt,name=type,enum=pb.Permission_Type" json:"type,omitempty"`
	TableName        *TableName       `protobuf:"bytes,2,opt,name=table_name,json=tableName" json:"table_name,omitempty"`
	NamespaceName    []byte           `protobuf:"bytes,3,opt,name=namespace_name,json=namespaceName" json:"namespace_name,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *GetUserPermissionsRequest) Reset()                    { *m = GetUserPermissionsRequest{} }
func (m *GetUserPermissionsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUserPermissionsRequest) ProtoMessage()               {}
func (*GetUserPermissionsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *GetUserPermissionsRequest) GetType() Permission_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Permission_Global
}

func (m *GetUserPermissionsRequest) GetTableName() *TableName {
	if m != nil {
		return m.TableName
	}
	return nil
}

func (m *GetUserPermissionsRequest) GetNamespaceName() []byte {
	if m != nil {
		return m.NamespaceName
	}
	return nil
}

type GetUserPermissionsResponse struct {
	UserPermission   []*UserPermission `protobuf:"bytes,1,rep,name=user_permission,json=userPermission" json:"user_permission,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *GetUserPermissionsResponse) Reset()                    { *m = GetUserPermissionsResponse{} }
func (m *GetUserPermissionsResponse) String() string            { return proto.CompactTextString(m) }
func (*GetUserPermissionsResponse) ProtoMessage()               {}
func (*GetUserPermissionsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *GetUserPermissionsResponse) GetUserPermission() []*UserPermission {
	if m != nil {
		return m.UserPermission
	}
	return nil
}

type CheckPermissionsRequest struct {
	Permission       []*Permission `protobuf:"bytes,1,rep,name=permission" json:"permission,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *CheckPermissionsRequest) Reset()                    { *m = CheckPermissionsRequest{} }
func (m *CheckPermissionsRequest) String() string            { return proto.CompactTextString(m) }
func (*CheckPermissionsRequest) ProtoMessage()               {}
func (*CheckPermissionsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *CheckPermissionsRequest) GetPermission() []*Permission {
	if m != nil {
		return m.Permission
	}
	return nil
}

type CheckPermissionsResponse struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CheckPermissionsResponse) Reset()                    { *m = CheckPermissionsResponse{} }
func (m *CheckPermissionsResponse) String() string            { return proto.CompactTextString(m) }
func (*CheckPermissionsResponse) ProtoMessage()               {}
func (*CheckPermissionsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func init() {
	proto.RegisterType((*Permission)(nil), "pb.Permission")
	proto.RegisterType((*TablePermission)(nil), "pb.TablePermission")
	proto.RegisterType((*NamespacePermission)(nil), "pb.NamespacePermission")
	proto.RegisterType((*GlobalPermission)(nil), "pb.GlobalPermission")
	proto.RegisterType((*UserPermission)(nil), "pb.UserPermission")
	proto.RegisterType((*UsersAndPermissions)(nil), "pb.UsersAndPermissions")
	proto.RegisterType((*UsersAndPermissions_UserPermissions)(nil), "pb.UsersAndPermissions.UserPermissions")
	proto.RegisterType((*GrantRequest)(nil), "pb.GrantRequest")
	proto.RegisterType((*GrantResponse)(nil), "pb.GrantResponse")
	proto.RegisterType((*RevokeRequest)(nil), "pb.RevokeRequest")
	proto.RegisterType((*RevokeResponse)(nil), "pb.RevokeResponse")
	proto.RegisterType((*GetUserPermissionsRequest)(nil), "pb.GetUserPermissionsRequest")
	proto.RegisterType((*GetUserPermissionsResponse)(nil), "pb.GetUserPermissionsResponse")
	proto.RegisterType((*CheckPermissionsRequest)(nil), "pb.CheckPermissionsRequest")
	proto.RegisterType((*CheckPermissionsResponse)(nil), "pb.CheckPermissionsResponse")
	proto.RegisterEnum("pb.Permission_Action", Permission_Action_name, Permission_Action_value)
	proto.RegisterEnum("pb.Permission_Type", Permission_Type_name, Permission_Type_value)
}

var fileDescriptor0 = []byte{
	// 758 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x55, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x66, 0x9d, 0x34, 0x6a, 0x26, 0x7f, 0xee, 0xa6, 0xd0, 0x60, 0x0a, 0xaa, 0x2c, 0xa1, 0x56,
	0xa8, 0x18, 0x94, 0x23, 0x48, 0x95, 0xd2, 0x34, 0x6a, 0x83, 0x68, 0x55, 0x6d, 0x83, 0x0a, 0xa7,
	0xca, 0x49, 0x37, 0x89, 0xd5, 0xc4, 0x76, 0xbd, 0x4e, 0x45, 0xdf, 0x80, 0x23, 0xd7, 0xde, 0x38,
	0xf0, 0x24, 0x3c, 0x12, 0x4f, 0x80, 0x77, 0xed, 0xc4, 0x6b, 0xc7, 0x85, 0x1e, 0xb8, 0x25, 0xdf,
	0xcc, 0x7c, 0xfb, 0xcd, 0x37, 0xb3, 0x5e, 0xa8, 0xb7, 0x06, 0x03, 0xca, 0x58, 0xdb, 0xb1, 0x7d,
	0xcf, 0x99, 0x18, 0xae, 0xe7, 0xf8, 0x0e, 0x56, 0xdc, 0xbe, 0x56, 0x3a, 0xda, 0x37, 0x19, 0x0d,
	0x01, 0xfd, 0xb7, 0x02, 0x70, 0x4a, 0xbd, 0xa9, 0xc5, 0x98, 0xe5, 0xd8, 0x78, 0x1b, 0xf2, 0xfe,
	0xad, 0x4b, 0x1b, 0x68, 0x4b, 0xd9, 0xa9, 0x36, 0xeb, 0x86, 0xdb, 0x37, 0xe2, 0xa8, 0xd1, 0x0b,
	0x42, 0x44, 0x24, 0xe0, 0x16, 0xac, 0x8d, 0x26, 0x4e, 0xdf, 0x9c, 0x5c, 0xb8, 0x8b, 0x78, 0x43,
	0xd9, 0x42, 0x3b, 0xa5, 0xe6, 0x3a, 0xaf, 0x3a, 0x14, 0xc1, 0xb8, 0x96, 0xa8, 0xa3, 0x14, 0x82,
	0x3f, 0xc0, 0xba, 0x6d, 0x4e, 0x29, 0x73, 0xcd, 0x01, 0x95, 0x59, 0x72, 0x82, 0x65, 0x83, 0xb3,
	0x9c, 0xcc, 0xe3, 0x12, 0x51, 0xdd, 0x5e, 0x06, 0xf1, 0x1e, 0xa8, 0xbe, 0xd9, 0x9f, 0x24, 0x78,
	0xf2, 0x82, 0x47, 0xf4, 0xd0, 0xe3, 0x31, 0x89, 0xa3, 0xe6, 0x27, 0x01, 0x7d, 0x0f, 0x0a, 0xad,
	0x81, 0xcf, 0x99, 0x56, 0x21, 0x4f, 0x3a, 0xad, 0x03, 0xf5, 0x11, 0x2e, 0xc2, 0xca, 0x39, 0xe9,
	0xf6, 0x3a, 0x2a, 0xe2, 0x60, 0xe7, 0x73, 0xa7, 0xad, 0x2a, 0x18, 0xa0, 0xd0, 0x0e, 0xe2, 0x01,
	0x9a, 0xe3, 0x09, 0xad, 0x83, 0xe3, 0xee, 0x89, 0x9a, 0xd7, 0x77, 0x21, 0xcf, 0xcd, 0xe1, 0xe1,
	0xb0, 0xf3, 0xa0, 0xa8, 0x02, 0xc5, 0x85, 0xfe, 0xa0, 0x32, 0xc8, 0x16, 0x32, 0xd4, 0x9c, 0xfe,
	0x13, 0x41, 0x2d, 0x25, 0x09, 0xef, 0x02, 0x84, 0x1d, 0xf0, 0xf6, 0x02, 0xff, 0xb9, 0xf6, 0xca,
	0x42, 0x3b, 0x27, 0x22, 0x45, 0x7f, 0xfe, 0x13, 0x3f, 0x81, 0xc2, 0xd0, 0x9c, 0x5a, 0x93, 0x5b,
	0xe1, 0x79, 0x99, 0x44, 0xff, 0xf0, 0x26, 0x14, 0xaf, 0x67, 0xe6, 0xc4, 0x1a, 0x5a, 0xd4, 0x13,
	0x46, 0x96, 0x49, 0x0c, 0xe0, 0xd7, 0x50, 0x30, 0x45, 0x97, 0x81, 0x37, 0xb9, 0x60, 0xbe, 0x8f,
	0x53, 0xf3, 0x0d, 0x2d, 0x20, 0x51, 0x92, 0x7e, 0x05, 0xf5, 0x8c, 0x01, 0xe0, 0x97, 0x50, 0x8d,
	0xe7, 0xb6, 0x50, 0x5b, 0x26, 0x95, 0x05, 0x2a, 0x24, 0xc6, 0x87, 0x29, 0x0f, 0x39, 0xac, 0x05,
	0x6a, 0x7a, 0x67, 0x24, 0x0a, 0xf4, 0x10, 0x8a, 0x1e, 0x54, 0x3f, 0x31, 0xea, 0x49, 0x04, 0x18,
	0xf2, 0xb3, 0x00, 0x11, 0xeb, 0x5c, 0x26, 0xe2, 0x37, 0x36, 0x00, 0x12, 0xcb, 0xa6, 0x04, 0x46,
	0x57, 0x93, 0xc4, 0x44, 0xca, 0xd0, 0x7f, 0x21, 0xa8, 0x73, 0x5a, 0xd6, 0xb2, 0x2f, 0xe3, 0x14,
	0x86, 0x09, 0xa8, 0x9c, 0x4f, 0xda, 0x38, 0x26, 0x64, 0x96, 0x9a, 0xdb, 0x9c, 0x2d, 0xa3, 0xc4,
	0x48, 0xaa, 0x63, 0xa4, 0x36, 0x4b, 0x02, 0xda, 0x39, 0xd4, 0x52, 0x39, 0x99, 0x2d, 0xbc, 0x85,
	0x92, 0x7c, 0xaa, 0x22, 0x4e, 0x4d, 0xf7, 0x20, 0xa7, 0xe8, 0xdf, 0x11, 0x94, 0x0f, 0x3d, 0xd3,
	0xf6, 0x09, 0xbd, 0x9e, 0x51, 0xe6, 0xe3, 0xf7, 0x50, 0x4b, 0xa9, 0x17, 0x27, 0x94, 0x9a, 0x78,
	0x2e, 0x5e, 0xa2, 0xaa, 0x26, 0x75, 0xe2, 0x36, 0x68, 0x53, 0xea, 0x8d, 0xe8, 0x05, 0xfd, 0x6a,
	0x31, 0xdf, 0xb2, 0x47, 0x17, 0x49, 0x39, 0x68, 0x67, 0xf5, 0xdd, 0xca, 0xd0, 0x9c, 0x30, 0x4a,
	0x1a, 0x22, 0xb1, 0x13, 0xe5, 0x49, 0x8d, 0xe9, 0x35, 0xa8, 0x44, 0x8a, 0x98, 0x1b, 0xfc, 0xa7,
	0xfa, 0x47, 0xa8, 0x10, 0x7a, 0xe3, 0x5c, 0xd1, 0xff, 0xa1, 0x51, 0x57, 0xa1, 0x3a, 0x67, 0x8b,
	0xf8, 0xef, 0x10, 0x3c, 0x3d, 0xa4, 0x7e, 0x7a, 0x08, 0xd1, 0x61, 0xf1, 0x97, 0x0f, 0xfd, 0xfd,
	0xcb, 0x97, 0xbc, 0xa8, 0xca, 0x3f, 0x2e, 0xea, 0xf2, 0x65, 0xc9, 0x65, 0x5c, 0x16, 0xfd, 0x0b,
	0x68, 0x59, 0xd2, 0x42, 0xe5, 0xd9, 0x46, 0xe4, 0x1e, 0x68, 0x44, 0x17, 0x36, 0xda, 0x63, 0x3a,
	0xb8, 0xca, 0xe8, 0x39, 0x79, 0x15, 0x50, 0xe6, 0x1a, 0xc9, 0x57, 0x41, 0x83, 0xc6, 0x32, 0x55,
	0xa8, 0xb1, 0x79, 0xa7, 0xc0, 0x7a, 0xe2, 0xc5, 0x39, 0xa3, 0xde, 0x8d, 0x35, 0xe0, 0x7e, 0xad,
	0x88, 0x39, 0x63, 0x55, 0xbc, 0x0b, 0xd2, 0x12, 0x6a, 0x6b, 0x12, 0x12, 0xb5, 0xfa, 0x06, 0x0a,
	0xe1, 0xd8, 0xb0, 0x08, 0x26, 0x16, 0x42, 0xc3, 0x32, 0x14, 0x15, 0x9c, 0x01, 0x5e, 0x76, 0x0e,
	0x3f, 0x17, 0xcc, 0xf7, 0x0d, 0x5b, 0x7b, 0x71, 0x5f, 0x38, 0x22, 0x3d, 0x06, 0x35, 0xdd, 0x28,
	0x7e, 0xc6, 0x6b, 0xee, 0x71, 0x52, 0xdb, 0xcc, 0x0e, 0x86, 0x74, 0xfb, 0x5d, 0x78, 0xe5, 0x78,
	0x23, 0xc3, 0x0c, 0xc6, 0x3d, 0xa6, 0xc6, 0xd8, 0xbc, 0x74, 0x1c, 0xd7, 0x18, 0xf7, 0x17, 0xaf,
	0x70, 0x7f, 0x36, 0x34, 0x46, 0xd4, 0xa6, 0x9e, 0xe9, 0xd3, 0xcb, 0xfd, 0xe4, 0xc3, 0x7d, 0xca,
	0x13, 0xd8, 0x11, 0xfa, 0x86, 0xd0, 0x0f, 0x84, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0x4b, 0x8b,
	0xef, 0x75, 0xd6, 0x07, 0x00, 0x00,
}
