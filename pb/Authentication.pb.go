// Code generated by protoc-gen-go.
// source: Authentication.proto
// DO NOT EDIT!

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type TokenIdentifier_Kind int32

const (
	TokenIdentifier_HBASE_AUTH_TOKEN TokenIdentifier_Kind = 0
)

var TokenIdentifier_Kind_name = map[int32]string{
	0: "HBASE_AUTH_TOKEN",
}
var TokenIdentifier_Kind_value = map[string]int32{
	"HBASE_AUTH_TOKEN": 0,
}

func (x TokenIdentifier_Kind) Enum() *TokenIdentifier_Kind {
	p := new(TokenIdentifier_Kind)
	*p = x
	return p
}
func (x TokenIdentifier_Kind) String() string {
	return proto.EnumName(TokenIdentifier_Kind_name, int32(x))
}
func (x *TokenIdentifier_Kind) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TokenIdentifier_Kind_value, data, "TokenIdentifier_Kind")
	if err != nil {
		return err
	}
	*x = TokenIdentifier_Kind(value)
	return nil
}
func (TokenIdentifier_Kind) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{1, 0} }

type AuthenticationKey struct {
	Id               *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	ExpirationDate   *int64 `protobuf:"varint,2,req,name=expiration_date,json=expirationDate" json:"expiration_date,omitempty"`
	Key              []byte `protobuf:"bytes,3,req,name=key" json:"key,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AuthenticationKey) Reset()                    { *m = AuthenticationKey{} }
func (m *AuthenticationKey) String() string            { return proto.CompactTextString(m) }
func (*AuthenticationKey) ProtoMessage()               {}
func (*AuthenticationKey) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *AuthenticationKey) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *AuthenticationKey) GetExpirationDate() int64 {
	if m != nil && m.ExpirationDate != nil {
		return *m.ExpirationDate
	}
	return 0
}

func (m *AuthenticationKey) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type TokenIdentifier struct {
	Kind             *TokenIdentifier_Kind `protobuf:"varint,1,req,name=kind,enum=pb.TokenIdentifier_Kind" json:"kind,omitempty"`
	Username         []byte                `protobuf:"bytes,2,req,name=username" json:"username,omitempty"`
	KeyId            *int32                `protobuf:"varint,3,req,name=key_id,json=keyId" json:"key_id,omitempty"`
	IssueDate        *int64                `protobuf:"varint,4,opt,name=issue_date,json=issueDate" json:"issue_date,omitempty"`
	ExpirationDate   *int64                `protobuf:"varint,5,opt,name=expiration_date,json=expirationDate" json:"expiration_date,omitempty"`
	SequenceNumber   *int64                `protobuf:"varint,6,opt,name=sequence_number,json=sequenceNumber" json:"sequence_number,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *TokenIdentifier) Reset()                    { *m = TokenIdentifier{} }
func (m *TokenIdentifier) String() string            { return proto.CompactTextString(m) }
func (*TokenIdentifier) ProtoMessage()               {}
func (*TokenIdentifier) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *TokenIdentifier) GetKind() TokenIdentifier_Kind {
	if m != nil && m.Kind != nil {
		return *m.Kind
	}
	return TokenIdentifier_HBASE_AUTH_TOKEN
}

func (m *TokenIdentifier) GetUsername() []byte {
	if m != nil {
		return m.Username
	}
	return nil
}

func (m *TokenIdentifier) GetKeyId() int32 {
	if m != nil && m.KeyId != nil {
		return *m.KeyId
	}
	return 0
}

func (m *TokenIdentifier) GetIssueDate() int64 {
	if m != nil && m.IssueDate != nil {
		return *m.IssueDate
	}
	return 0
}

func (m *TokenIdentifier) GetExpirationDate() int64 {
	if m != nil && m.ExpirationDate != nil {
		return *m.ExpirationDate
	}
	return 0
}

func (m *TokenIdentifier) GetSequenceNumber() int64 {
	if m != nil && m.SequenceNumber != nil {
		return *m.SequenceNumber
	}
	return 0
}

// Serialization of the org.apache.hadoop.security.token.Token class
// Note that this is a Hadoop class, so fields may change!
type Token struct {
	// the TokenIdentifier in serialized form
	// Note: we can't use the protobuf directly because the Hadoop Token class
	// only stores the serialized bytes
	Identifier       []byte `protobuf:"bytes,1,opt,name=identifier" json:"identifier,omitempty"`
	Password         []byte `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	Service          []byte `protobuf:"bytes,3,opt,name=service" json:"service,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Token) Reset()                    { *m = Token{} }
func (m *Token) String() string            { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()               {}
func (*Token) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

func (m *Token) GetIdentifier() []byte {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (m *Token) GetPassword() []byte {
	if m != nil {
		return m.Password
	}
	return nil
}

func (m *Token) GetService() []byte {
	if m != nil {
		return m.Service
	}
	return nil
}

// RPC request & response messages
type GetAuthenticationTokenRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetAuthenticationTokenRequest) Reset()                    { *m = GetAuthenticationTokenRequest{} }
func (m *GetAuthenticationTokenRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAuthenticationTokenRequest) ProtoMessage()               {}
func (*GetAuthenticationTokenRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{3} }

type GetAuthenticationTokenResponse struct {
	Token            *Token `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetAuthenticationTokenResponse) Reset()                    { *m = GetAuthenticationTokenResponse{} }
func (m *GetAuthenticationTokenResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAuthenticationTokenResponse) ProtoMessage()               {}
func (*GetAuthenticationTokenResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{4} }

func (m *GetAuthenticationTokenResponse) GetToken() *Token {
	if m != nil {
		return m.Token
	}
	return nil
}

type WhoAmIRequest struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *WhoAmIRequest) Reset()                    { *m = WhoAmIRequest{} }
func (m *WhoAmIRequest) String() string            { return proto.CompactTextString(m) }
func (*WhoAmIRequest) ProtoMessage()               {}
func (*WhoAmIRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{5} }

type WhoAmIResponse struct {
	Username         *string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	AuthMethod       *string `protobuf:"bytes,2,opt,name=auth_method,json=authMethod" json:"auth_method,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *WhoAmIResponse) Reset()                    { *m = WhoAmIResponse{} }
func (m *WhoAmIResponse) String() string            { return proto.CompactTextString(m) }
func (*WhoAmIResponse) ProtoMessage()               {}
func (*WhoAmIResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{6} }

func (m *WhoAmIResponse) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

func (m *WhoAmIResponse) GetAuthMethod() string {
	if m != nil && m.AuthMethod != nil {
		return *m.AuthMethod
	}
	return ""
}

func init() {
	proto.RegisterType((*AuthenticationKey)(nil), "pb.AuthenticationKey")
	proto.RegisterType((*TokenIdentifier)(nil), "pb.TokenIdentifier")
	proto.RegisterType((*Token)(nil), "pb.Token")
	proto.RegisterType((*GetAuthenticationTokenRequest)(nil), "pb.GetAuthenticationTokenRequest")
	proto.RegisterType((*GetAuthenticationTokenResponse)(nil), "pb.GetAuthenticationTokenResponse")
	proto.RegisterType((*WhoAmIRequest)(nil), "pb.WhoAmIRequest")
	proto.RegisterType((*WhoAmIResponse)(nil), "pb.WhoAmIResponse")
	proto.RegisterEnum("pb.TokenIdentifier_Kind", TokenIdentifier_Kind_name, TokenIdentifier_Kind_value)
}

var fileDescriptor3 = []byte{
	// 491 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x93, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x86, 0xb1, 0x13, 0x07, 0x32, 0x2d, 0x49, 0xba, 0x6a, 0x91, 0x15, 0xd1, 0xa6, 0xf8, 0x02,
	0x42, 0xc8, 0x48, 0x79, 0x03, 0x47, 0x54, 0x24, 0x44, 0x2d, 0xc8, 0x0d, 0xe2, 0x04, 0x96, 0x1d,
	0x4f, 0x6b, 0x2b, 0x8a, 0xd7, 0x78, 0xd7, 0x40, 0x8f, 0xdc, 0x78, 0x0c, 0xae, 0xbc, 0x25, 0xb3,
	0xbb, 0x4d, 0x48, 0xa2, 0xd2, 0xdb, 0xce, 0x3f, 0xbf, 0x77, 0xfe, 0x4f, 0xe3, 0x85, 0xc3, 0xa0,
	0x96, 0x19, 0x16, 0x32, 0x9f, 0xc7, 0x32, 0xe7, 0x85, 0x5f, 0x56, 0x5c, 0x72, 0x66, 0x97, 0x89,
	0xf7, 0x05, 0x0e, 0xb6, 0x7b, 0x53, 0xbc, 0x61, 0x1d, 0xb0, 0xf3, 0xd4, 0xb5, 0x4e, 0xed, 0x17,
	0x4e, 0x48, 0x27, 0xf6, 0x1c, 0xba, 0xf8, 0xa3, 0xcc, 0x2b, 0x6d, 0x88, 0xd2, 0x58, 0xa2, 0x6b,
	0x53, 0xb3, 0x11, 0x76, 0xfe, 0xc9, 0x6f, 0x48, 0x65, 0x3d, 0x68, 0x2c, 0xf0, 0xc6, 0x6d, 0x50,
	0x73, 0x3f, 0x54, 0x47, 0xef, 0xa7, 0x0d, 0xdd, 0x19, 0x5f, 0x60, 0x31, 0x49, 0xd5, 0x8c, 0xab,
	0x1c, 0x2b, 0xf6, 0x0a, 0x9a, 0x8b, 0xbc, 0x30, 0x03, 0x3a, 0x43, 0xd7, 0x2f, 0x13, 0x7f, 0xc7,
	0xe2, 0x4f, 0xa9, 0x1f, 0x6a, 0x17, 0xeb, 0xc3, 0xa3, 0x5a, 0x60, 0x55, 0xc4, 0x4b, 0x33, 0x75,
	0x3f, 0x5c, 0xd7, 0xec, 0x08, 0x5a, 0x34, 0x24, 0xa2, 0xb0, 0x0d, 0x1d, 0xd6, 0xa1, 0x6a, 0x92,
	0xb2, 0x63, 0x80, 0x5c, 0x88, 0x1a, 0x4d, 0xd4, 0xe6, 0xa9, 0x45, 0x51, 0xdb, 0x5a, 0xd1, 0x29,
	0xef, 0xc0, 0x71, 0xb4, 0x67, 0x17, 0x87, 0x8c, 0x02, 0xbf, 0xd6, 0x58, 0xcc, 0x31, 0x2a, 0xea,
	0x65, 0x82, 0x95, 0xdb, 0x32, 0xc6, 0x95, 0x7c, 0xa1, 0x55, 0xef, 0x29, 0x34, 0x55, 0x62, 0x76,
	0x08, 0xbd, 0xf1, 0x28, 0xb8, 0x3c, 0x8b, 0x82, 0x8f, 0xb3, 0x71, 0x34, 0x7b, 0x3f, 0x3d, 0xbb,
	0xe8, 0x3d, 0xf0, 0x3e, 0x83, 0xa3, 0xf9, 0xd8, 0x09, 0xe5, 0x5a, 0x33, 0x12, 0xbe, 0x45, 0x30,
	0x1b, 0x8a, 0x42, 0x2d, 0x63, 0x21, 0xbe, 0xf3, 0x2a, 0x25, 0x54, 0xd5, 0x5d, 0xd7, 0xcc, 0x85,
	0x87, 0x44, 0xfd, 0x2d, 0x9f, 0x23, 0xb1, 0xaa, 0xd6, 0xaa, 0xf4, 0x06, 0x70, 0xfc, 0x16, 0xe5,
	0xf6, 0x16, 0xf5, 0xbc, 0x50, 0x85, 0x14, 0xd2, 0x0b, 0xe0, 0xe4, 0x7f, 0x06, 0x51, 0xf2, 0x42,
	0x20, 0x1b, 0x80, 0x23, 0x95, 0xa0, 0x33, 0xed, 0x0d, 0xdb, 0xeb, 0x95, 0x84, 0x46, 0xf7, 0xba,
	0xf0, 0xf8, 0x53, 0xc6, 0x83, 0xe5, 0x64, 0x75, 0xe7, 0x39, 0x74, 0x56, 0xc2, 0xed, 0x1d, 0x9b,
	0x7b, 0x52, 0xd7, 0xb4, 0x37, 0xf6, 0x34, 0x80, 0xbd, 0x98, 0xc6, 0x47, 0x4b, 0x94, 0x19, 0x37,
	0x6c, 0xed, 0x10, 0x94, 0x74, 0xae, 0x95, 0xe1, 0x1f, 0x0b, 0x8e, 0xb6, 0x03, 0x5e, 0x1a, 0x3a,
	0x16, 0xc1, 0x93, 0xbb, 0xc3, 0xb3, 0x67, 0x2a, 0xe5, 0xbd, 0xe4, 0x7d, 0xef, 0x3e, 0xcb, 0x6d,
	0xee, 0xd7, 0xd0, 0x32, 0x24, 0xec, 0x40, 0xb9, 0xb7, 0x30, 0xfb, 0x6c, 0x53, 0x32, 0x1f, 0x8c,
	0xde, 0xc1, 0x4b, 0x5e, 0x5d, 0xfb, 0x71, 0x19, 0xcf, 0x33, 0xf4, 0xb3, 0x38, 0xe5, 0xbc, 0xf4,
	0xb3, 0x24, 0x16, 0x68, 0xde, 0x55, 0x52, 0x5f, 0xf9, 0xd7, 0x58, 0x20, 0xfd, 0x48, 0x98, 0x8e,
	0x76, 0x9e, 0xde, 0x07, 0xe5, 0x10, 0x63, 0xeb, 0x97, 0x65, 0xfd, 0xb6, 0xac, 0xbf, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x0e, 0xa0, 0x34, 0x67, 0x99, 0x03, 0x00, 0x00,
}
