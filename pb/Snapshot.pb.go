// Code generated by protoc-gen-go.
// source: Snapshot.proto
// DO NOT EDIT!

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SnapshotDescription_Type int32

const (
	SnapshotDescription_DISABLED  SnapshotDescription_Type = 0
	SnapshotDescription_FLUSH     SnapshotDescription_Type = 1
	SnapshotDescription_SKIPFLUSH SnapshotDescription_Type = 2
)

var SnapshotDescription_Type_name = map[int32]string{
	0: "DISABLED",
	1: "FLUSH",
	2: "SKIPFLUSH",
}
var SnapshotDescription_Type_value = map[string]int32{
	"DISABLED":  0,
	"FLUSH":     1,
	"SKIPFLUSH": 2,
}

func (x SnapshotDescription_Type) Enum() *SnapshotDescription_Type {
	p := new(SnapshotDescription_Type)
	*p = x
	return p
}
func (x SnapshotDescription_Type) String() string {
	return proto.EnumName(SnapshotDescription_Type_name, int32(x))
}
func (x *SnapshotDescription_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SnapshotDescription_Type_value, data, "SnapshotDescription_Type")
	if err != nil {
		return err
	}
	*x = SnapshotDescription_Type(value)
	return nil
}
func (SnapshotDescription_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor24, []int{0, 0} }

type SnapshotFileInfo_Type int32

const (
	SnapshotFileInfo_HFILE SnapshotFileInfo_Type = 1
	SnapshotFileInfo_WAL   SnapshotFileInfo_Type = 2
)

var SnapshotFileInfo_Type_name = map[int32]string{
	1: "HFILE",
	2: "WAL",
}
var SnapshotFileInfo_Type_value = map[string]int32{
	"HFILE": 1,
	"WAL":   2,
}

func (x SnapshotFileInfo_Type) Enum() *SnapshotFileInfo_Type {
	p := new(SnapshotFileInfo_Type)
	*p = x
	return p
}
func (x SnapshotFileInfo_Type) String() string {
	return proto.EnumName(SnapshotFileInfo_Type_name, int32(x))
}
func (x *SnapshotFileInfo_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SnapshotFileInfo_Type_value, data, "SnapshotFileInfo_Type")
	if err != nil {
		return err
	}
	*x = SnapshotFileInfo_Type(value)
	return nil
}
func (SnapshotFileInfo_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor24, []int{1, 0} }

// *
// Description of the snapshot to take
type SnapshotDescription struct {
	Name                *string                   `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Table               *string                   `protobuf:"bytes,2,opt,name=table" json:"table,omitempty"`
	CreationTime        *int64                    `protobuf:"varint,3,opt,name=creation_time,json=creationTime,def=0" json:"creation_time,omitempty"`
	Type                *SnapshotDescription_Type `protobuf:"varint,4,opt,name=type,enum=pb.SnapshotDescription_Type,def=1" json:"type,omitempty"`
	Version             *int32                    `protobuf:"varint,5,opt,name=version" json:"version,omitempty"`
	Owner               *string                   `protobuf:"bytes,6,opt,name=owner" json:"owner,omitempty"`
	UsersAndPermissions *UsersAndPermissions      `protobuf:"bytes,7,opt,name=users_and_permissions,json=usersAndPermissions" json:"users_and_permissions,omitempty"`
	XXX_unrecognized    []byte                    `json:"-"`
}

func (m *SnapshotDescription) Reset()                    { *m = SnapshotDescription{} }
func (m *SnapshotDescription) String() string            { return proto.CompactTextString(m) }
func (*SnapshotDescription) ProtoMessage()               {}
func (*SnapshotDescription) Descriptor() ([]byte, []int) { return fileDescriptor24, []int{0} }

const Default_SnapshotDescription_CreationTime int64 = 0
const Default_SnapshotDescription_Type SnapshotDescription_Type = SnapshotDescription_FLUSH

func (m *SnapshotDescription) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *SnapshotDescription) GetTable() string {
	if m != nil && m.Table != nil {
		return *m.Table
	}
	return ""
}

func (m *SnapshotDescription) GetCreationTime() int64 {
	if m != nil && m.CreationTime != nil {
		return *m.CreationTime
	}
	return Default_SnapshotDescription_CreationTime
}

func (m *SnapshotDescription) GetType() SnapshotDescription_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_SnapshotDescription_Type
}

func (m *SnapshotDescription) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *SnapshotDescription) GetOwner() string {
	if m != nil && m.Owner != nil {
		return *m.Owner
	}
	return ""
}

func (m *SnapshotDescription) GetUsersAndPermissions() *UsersAndPermissions {
	if m != nil {
		return m.UsersAndPermissions
	}
	return nil
}

type SnapshotFileInfo struct {
	Type             *SnapshotFileInfo_Type `protobuf:"varint,1,req,name=type,enum=pb.SnapshotFileInfo_Type" json:"type,omitempty"`
	Hfile            *string                `protobuf:"bytes,3,opt,name=hfile" json:"hfile,omitempty"`
	WalServer        *string                `protobuf:"bytes,4,opt,name=wal_server,json=walServer" json:"wal_server,omitempty"`
	WalName          *string                `protobuf:"bytes,5,opt,name=wal_name,json=walName" json:"wal_name,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *SnapshotFileInfo) Reset()                    { *m = SnapshotFileInfo{} }
func (m *SnapshotFileInfo) String() string            { return proto.CompactTextString(m) }
func (*SnapshotFileInfo) ProtoMessage()               {}
func (*SnapshotFileInfo) Descriptor() ([]byte, []int) { return fileDescriptor24, []int{1} }

func (m *SnapshotFileInfo) GetType() SnapshotFileInfo_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return SnapshotFileInfo_HFILE
}

func (m *SnapshotFileInfo) GetHfile() string {
	if m != nil && m.Hfile != nil {
		return *m.Hfile
	}
	return ""
}

func (m *SnapshotFileInfo) GetWalServer() string {
	if m != nil && m.WalServer != nil {
		return *m.WalServer
	}
	return ""
}

func (m *SnapshotFileInfo) GetWalName() string {
	if m != nil && m.WalName != nil {
		return *m.WalName
	}
	return ""
}

type SnapshotRegionManifest struct {
	Version          *int32                                `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	RegionInfo       *RegionInfo                           `protobuf:"bytes,2,req,name=region_info,json=regionInfo" json:"region_info,omitempty"`
	FamilyFiles      []*SnapshotRegionManifest_FamilyFiles `protobuf:"bytes,3,rep,name=family_files,json=familyFiles" json:"family_files,omitempty"`
	XXX_unrecognized []byte                                `json:"-"`
}

func (m *SnapshotRegionManifest) Reset()                    { *m = SnapshotRegionManifest{} }
func (m *SnapshotRegionManifest) String() string            { return proto.CompactTextString(m) }
func (*SnapshotRegionManifest) ProtoMessage()               {}
func (*SnapshotRegionManifest) Descriptor() ([]byte, []int) { return fileDescriptor24, []int{2} }

func (m *SnapshotRegionManifest) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *SnapshotRegionManifest) GetRegionInfo() *RegionInfo {
	if m != nil {
		return m.RegionInfo
	}
	return nil
}

func (m *SnapshotRegionManifest) GetFamilyFiles() []*SnapshotRegionManifest_FamilyFiles {
	if m != nil {
		return m.FamilyFiles
	}
	return nil
}

type SnapshotRegionManifest_StoreFile struct {
	Name      *string    `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Reference *Reference `protobuf:"bytes,2,opt,name=reference" json:"reference,omitempty"`
	// TODO: Add checksums or other fields to verify the file
	FileSize         *uint64 `protobuf:"varint,3,opt,name=file_size,json=fileSize" json:"file_size,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SnapshotRegionManifest_StoreFile) Reset()         { *m = SnapshotRegionManifest_StoreFile{} }
func (m *SnapshotRegionManifest_StoreFile) String() string { return proto.CompactTextString(m) }
func (*SnapshotRegionManifest_StoreFile) ProtoMessage()    {}
func (*SnapshotRegionManifest_StoreFile) Descriptor() ([]byte, []int) {
	return fileDescriptor24, []int{2, 0}
}

func (m *SnapshotRegionManifest_StoreFile) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *SnapshotRegionManifest_StoreFile) GetReference() *Reference {
	if m != nil {
		return m.Reference
	}
	return nil
}

func (m *SnapshotRegionManifest_StoreFile) GetFileSize() uint64 {
	if m != nil && m.FileSize != nil {
		return *m.FileSize
	}
	return 0
}

type SnapshotRegionManifest_FamilyFiles struct {
	FamilyName       []byte                              `protobuf:"bytes,1,req,name=family_name,json=familyName" json:"family_name,omitempty"`
	StoreFiles       []*SnapshotRegionManifest_StoreFile `protobuf:"bytes,2,rep,name=store_files,json=storeFiles" json:"store_files,omitempty"`
	XXX_unrecognized []byte                              `json:"-"`
}

func (m *SnapshotRegionManifest_FamilyFiles) Reset()         { *m = SnapshotRegionManifest_FamilyFiles{} }
func (m *SnapshotRegionManifest_FamilyFiles) String() string { return proto.CompactTextString(m) }
func (*SnapshotRegionManifest_FamilyFiles) ProtoMessage()    {}
func (*SnapshotRegionManifest_FamilyFiles) Descriptor() ([]byte, []int) {
	return fileDescriptor24, []int{2, 1}
}

func (m *SnapshotRegionManifest_FamilyFiles) GetFamilyName() []byte {
	if m != nil {
		return m.FamilyName
	}
	return nil
}

func (m *SnapshotRegionManifest_FamilyFiles) GetStoreFiles() []*SnapshotRegionManifest_StoreFile {
	if m != nil {
		return m.StoreFiles
	}
	return nil
}

type SnapshotDataManifest struct {
	TableSchema      *TableSchema              `protobuf:"bytes,1,req,name=table_schema,json=tableSchema" json:"table_schema,omitempty"`
	RegionManifests  []*SnapshotRegionManifest `protobuf:"bytes,2,rep,name=region_manifests,json=regionManifests" json:"region_manifests,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *SnapshotDataManifest) Reset()                    { *m = SnapshotDataManifest{} }
func (m *SnapshotDataManifest) String() string            { return proto.CompactTextString(m) }
func (*SnapshotDataManifest) ProtoMessage()               {}
func (*SnapshotDataManifest) Descriptor() ([]byte, []int) { return fileDescriptor24, []int{3} }

func (m *SnapshotDataManifest) GetTableSchema() *TableSchema {
	if m != nil {
		return m.TableSchema
	}
	return nil
}

func (m *SnapshotDataManifest) GetRegionManifests() []*SnapshotRegionManifest {
	if m != nil {
		return m.RegionManifests
	}
	return nil
}

func init() {
	proto.RegisterType((*SnapshotDescription)(nil), "pb.SnapshotDescription")
	proto.RegisterType((*SnapshotFileInfo)(nil), "pb.SnapshotFileInfo")
	proto.RegisterType((*SnapshotRegionManifest)(nil), "pb.SnapshotRegionManifest")
	proto.RegisterType((*SnapshotRegionManifest_StoreFile)(nil), "pb.SnapshotRegionManifest.StoreFile")
	proto.RegisterType((*SnapshotRegionManifest_FamilyFiles)(nil), "pb.SnapshotRegionManifest.FamilyFiles")
	proto.RegisterType((*SnapshotDataManifest)(nil), "pb.SnapshotDataManifest")
	proto.RegisterEnum("pb.SnapshotDescription_Type", SnapshotDescription_Type_name, SnapshotDescription_Type_value)
	proto.RegisterEnum("pb.SnapshotFileInfo_Type", SnapshotFileInfo_Type_name, SnapshotFileInfo_Type_value)
}

var fileDescriptor24 = []byte{
	// 661 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x54, 0xdf, 0x6e, 0xd3, 0x3e,
	0x18, 0xfd, 0x25, 0x6d, 0x7f, 0x6d, 0xbe, 0x74, 0x5d, 0xe5, 0x0d, 0xc8, 0x0a, 0x88, 0xa9, 0x42,
	0x13, 0x12, 0x22, 0x40, 0x6f, 0x90, 0x76, 0xd7, 0xb2, 0x55, 0xad, 0x56, 0xd0, 0xe4, 0x6c, 0xe2,
	0x32, 0x72, 0x5b, 0x67, 0x8d, 0xd4, 0x26, 0x91, 0x9d, 0x32, 0x8d, 0x27, 0xe0, 0x12, 0xde, 0x80,
	0x17, 0xe0, 0x51, 0x78, 0x27, 0x3e, 0x3b, 0x7f, 0xda, 0x8a, 0xc1, 0x9d, 0xcf, 0xf9, 0x3e, 0xdb,
	0xe7, 0x1c, 0xff, 0x81, 0x96, 0x17, 0xb1, 0x44, 0x2e, 0xe2, 0xd4, 0x4d, 0x44, 0x9c, 0xc6, 0xc4,
	0x4c, 0xa6, 0x9d, 0x83, 0xfe, 0x6c, 0xc6, 0xa5, 0x7c, 0x1f, 0x47, 0xa9, 0x88, 0x97, 0x59, 0xa1,
	0xd3, 0x18, 0x7a, 0xf9, 0xc8, 0x1e, 0x0d, 0x98, 0xe4, 0x19, 0xe8, 0xfe, 0x32, 0xe1, 0xa0, 0x58,
	0xe2, 0x8c, 0xcb, 0x99, 0x08, 0x93, 0x34, 0x8c, 0x23, 0x42, 0xa0, 0x1a, 0xb1, 0x15, 0x77, 0x8c,
	0x63, 0xf3, 0x85, 0x45, 0xf5, 0x98, 0x1c, 0x42, 0x2d, 0x65, 0xd3, 0x25, 0x77, 0xcc, 0x63, 0x03,
	0xc9, 0x0c, 0x90, 0x13, 0xd8, 0x9b, 0x09, 0xce, 0xd4, 0x2c, 0x3f, 0x0d, 0x71, 0x4a, 0x05, 0xab,
	0x95, 0x53, 0xe3, 0x0d, 0x6d, 0x16, 0xfc, 0x15, 0xd2, 0xe4, 0x1d, 0x54, 0xd3, 0xbb, 0x84, 0x3b,
	0x55, 0x2c, 0xb7, 0x7a, 0x4f, 0xdc, 0x64, 0xea, 0xde, 0xb3, 0xb1, 0x7b, 0x85, 0x3d, 0xa7, 0xb5,
	0xe1, 0xe4, 0xda, 0x1b, 0x51, 0x3d, 0x81, 0x38, 0x50, 0xff, 0xcc, 0x85, 0xc4, 0xa2, 0x53, 0xc3,
	0xb9, 0x35, 0x5a, 0x40, 0x25, 0x28, 0xbe, 0x8d, 0xb8, 0x70, 0xfe, 0xcf, 0x04, 0x69, 0x40, 0x2e,
	0xe0, 0xc1, 0x5a, 0x62, 0x87, 0xcf, 0xa2, 0xb9, 0x9f, 0x70, 0xb1, 0x0a, 0xa5, 0xea, 0x96, 0x4e,
	0x1d, 0xbb, 0xec, 0xde, 0x23, 0xb5, 0xf3, 0xb5, 0x6a, 0xe8, 0x47, 0xf3, 0xcb, 0x4d, 0x99, 0x1e,
	0xac, 0xff, 0x24, 0xbb, 0x2e, 0x54, 0x95, 0x22, 0xd2, 0x84, 0xc6, 0xd9, 0xd8, 0xeb, 0x0f, 0x26,
	0xe7, 0x67, 0xed, 0xff, 0x88, 0x05, 0x99, 0xc2, 0xb6, 0x41, 0xf6, 0xc0, 0xf2, 0x2e, 0xc6, 0x97,
	0x19, 0x34, 0xbb, 0x3f, 0x0d, 0x68, 0x17, 0xb6, 0x86, 0xe1, 0x92, 0x8f, 0xa3, 0x20, 0x26, 0xaf,
	0x72, 0xeb, 0x2a, 0xcc, 0x56, 0xef, 0x68, 0xdb, 0x7a, 0xd1, 0xa3, 0x7d, 0xe7, 0x86, 0xd1, 0xd6,
	0x22, 0x40, 0x5e, 0x27, 0x89, 0xb6, 0x34, 0x20, 0x4f, 0x01, 0x6e, 0xd9, 0xd2, 0x47, 0x8d, 0x68,
	0x5f, 0xa7, 0x68, 0x51, 0x0b, 0x19, 0x4f, 0x13, 0xe4, 0x08, 0x1a, 0xaa, 0xac, 0x0f, 0xad, 0xa6,
	0x8b, 0x75, 0xc4, 0x1f, 0x11, 0x76, 0x3b, 0xb9, 0x07, 0x54, 0x3d, 0x1a, 0x8e, 0x27, 0xe7, 0xa8,
	0xba, 0x0e, 0x95, 0x4f, 0xfd, 0x09, 0xea, 0xfd, 0x56, 0x81, 0x87, 0x85, 0x16, 0xca, 0x6f, 0xd0,
	0xf3, 0x07, 0x16, 0x85, 0x01, 0x97, 0xe9, 0x76, 0xee, 0xc6, 0x6e, 0xee, 0xaf, 0xc1, 0x16, 0xba,
	0xd7, 0x0f, 0x51, 0x3a, 0x5e, 0x07, 0x13, 0x73, 0x6d, 0x29, 0x5b, 0xd9, 0x12, 0xca, 0x10, 0x05,
	0x51, 0x8e, 0xc9, 0x18, 0x9a, 0x01, 0x5b, 0x85, 0xcb, 0x3b, 0x5f, 0x59, 0x91, 0x68, 0xac, 0x82,
	0x33, 0x4e, 0xb6, 0x83, 0xd8, 0xdd, 0xdc, 0x1d, 0xea, 0x76, 0x95, 0x8e, 0xa4, 0x76, 0xb0, 0x01,
	0x9d, 0x10, 0xf3, 0x4e, 0x63, 0xc1, 0x15, 0xba, 0xf7, 0x96, 0xbe, 0x04, 0x4b, 0xf0, 0x80, 0x0b,
	0x1e, 0xcd, 0xb2, 0x9b, 0x6a, 0xf7, 0xf6, 0x32, 0x69, 0x39, 0x49, 0x37, 0x75, 0xf2, 0x18, 0x2c,
	0xa5, 0xc8, 0x97, 0xe1, 0x97, 0x2c, 0xee, 0x2a, 0x6d, 0x28, 0xc2, 0x43, 0xdc, 0x59, 0x83, 0xbd,
	0x25, 0x83, 0x3c, 0x83, 0x5c, 0x88, 0x5f, 0xee, 0xd9, 0xa4, 0x90, 0x51, 0x2a, 0x67, 0x72, 0x0e,
	0xb6, 0x54, 0xd2, 0x72, 0x93, 0xa6, 0x36, 0xf9, 0xfc, 0x1f, 0x26, 0x4b, 0x23, 0x14, 0x64, 0x31,
	0x94, 0xdd, 0xef, 0x06, 0x1c, 0x96, 0x2f, 0x83, 0xa5, 0xac, 0x3c, 0x90, 0x1e, 0x34, 0xf5, 0x93,
	0xf3, 0xe5, 0x6c, 0xc1, 0x57, 0x4c, 0x2b, 0xb0, 0x7b, 0xfb, 0x6a, 0x83, 0x2b, 0xc5, 0x7b, 0x9a,
	0xa6, 0x76, 0xba, 0x01, 0xa8, 0xa9, 0x9d, 0x1f, 0xd5, 0x2a, 0x5f, 0xa6, 0x10, 0xd6, 0xf9, 0xbb,
	0x30, 0xba, 0x2f, 0x76, 0xb0, 0x1c, 0x5c, 0xc0, 0xdb, 0x58, 0xdc, 0xb8, 0x2c, 0x61, 0xb8, 0xac,
	0xbb, 0x60, 0xf3, 0x38, 0x4e, 0xdc, 0xc5, 0x54, 0xfd, 0x23, 0x12, 0x11, 0x9f, 0x67, 0xdf, 0xc9,
	0x74, 0x1d, 0xb8, 0x37, 0x1c, 0x1f, 0x21, 0x4b, 0xf9, 0x7c, 0x50, 0xfe, 0x4d, 0x97, 0xaa, 0x26,
	0x47, 0xc6, 0x57, 0xc3, 0xf8, 0x61, 0x18, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0xf2, 0x90, 0x08,
	0xf2, 0xb4, 0x04, 0x00, 0x00,
}
