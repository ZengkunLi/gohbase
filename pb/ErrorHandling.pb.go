// Code generated by protoc-gen-go.
// source: ErrorHandling.proto
// DO NOT EDIT!

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// *
// Protobuf version of a java.lang.StackTraceElement
// so we can serialize exceptions.
type StackTraceElementMessage struct {
	DeclaringClass   *string `protobuf:"bytes,1,opt,name=declaring_class,json=declaringClass" json:"declaring_class,omitempty"`
	MethodName       *string `protobuf:"bytes,2,opt,name=method_name,json=methodName" json:"method_name,omitempty"`
	FileName         *string `protobuf:"bytes,3,opt,name=file_name,json=fileName" json:"file_name,omitempty"`
	LineNumber       *int32  `protobuf:"varint,4,opt,name=line_number,json=lineNumber" json:"line_number,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *StackTraceElementMessage) Reset()                    { *m = StackTraceElementMessage{} }
func (m *StackTraceElementMessage) String() string            { return proto.CompactTextString(m) }
func (*StackTraceElementMessage) ProtoMessage()               {}
func (*StackTraceElementMessage) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{0} }

func (m *StackTraceElementMessage) GetDeclaringClass() string {
	if m != nil && m.DeclaringClass != nil {
		return *m.DeclaringClass
	}
	return ""
}

func (m *StackTraceElementMessage) GetMethodName() string {
	if m != nil && m.MethodName != nil {
		return *m.MethodName
	}
	return ""
}

func (m *StackTraceElementMessage) GetFileName() string {
	if m != nil && m.FileName != nil {
		return *m.FileName
	}
	return ""
}

func (m *StackTraceElementMessage) GetLineNumber() int32 {
	if m != nil && m.LineNumber != nil {
		return *m.LineNumber
	}
	return 0
}

// *
// Cause of a remote failure for a generic exception. Contains
// all the information for a generic exception as well as
// optional info about the error for generic info passing
// (which should be another protobuffed class).
type GenericExceptionMessage struct {
	ClassName        *string                     `protobuf:"bytes,1,opt,name=class_name,json=className" json:"class_name,omitempty"`
	Message          *string                     `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	ErrorInfo        []byte                      `protobuf:"bytes,3,opt,name=error_info,json=errorInfo" json:"error_info,omitempty"`
	Trace            []*StackTraceElementMessage `protobuf:"bytes,4,rep,name=trace" json:"trace,omitempty"`
	XXX_unrecognized []byte                      `json:"-"`
}

func (m *GenericExceptionMessage) Reset()                    { *m = GenericExceptionMessage{} }
func (m *GenericExceptionMessage) String() string            { return proto.CompactTextString(m) }
func (*GenericExceptionMessage) ProtoMessage()               {}
func (*GenericExceptionMessage) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{1} }

func (m *GenericExceptionMessage) GetClassName() string {
	if m != nil && m.ClassName != nil {
		return *m.ClassName
	}
	return ""
}

func (m *GenericExceptionMessage) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *GenericExceptionMessage) GetErrorInfo() []byte {
	if m != nil {
		return m.ErrorInfo
	}
	return nil
}

func (m *GenericExceptionMessage) GetTrace() []*StackTraceElementMessage {
	if m != nil {
		return m.Trace
	}
	return nil
}

// *
// Exception sent across the wire when a remote task needs
// to notify other tasks that it failed and why
type ForeignExceptionMessage struct {
	Source           *string                  `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	GenericException *GenericExceptionMessage `protobuf:"bytes,2,opt,name=generic_exception,json=genericException" json:"generic_exception,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *ForeignExceptionMessage) Reset()                    { *m = ForeignExceptionMessage{} }
func (m *ForeignExceptionMessage) String() string            { return proto.CompactTextString(m) }
func (*ForeignExceptionMessage) ProtoMessage()               {}
func (*ForeignExceptionMessage) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{2} }

func (m *ForeignExceptionMessage) GetSource() string {
	if m != nil && m.Source != nil {
		return *m.Source
	}
	return ""
}

func (m *ForeignExceptionMessage) GetGenericException() *GenericExceptionMessage {
	if m != nil {
		return m.GenericException
	}
	return nil
}

func init() {
	proto.RegisterType((*StackTraceElementMessage)(nil), "pb.StackTraceElementMessage")
	proto.RegisterType((*GenericExceptionMessage)(nil), "pb.GenericExceptionMessage")
	proto.RegisterType((*ForeignExceptionMessage)(nil), "pb.ForeignExceptionMessage")
}

var fileDescriptor9 = []byte{
	// 349 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x92, 0xdf, 0x4a, 0xe3, 0x40,
	0x14, 0x87, 0x49, 0xbb, 0xdd, 0xdd, 0x9c, 0x2e, 0xab, 0x46, 0xb0, 0x81, 0x2a, 0x4a, 0x6f, 0xec,
	0xd5, 0x80, 0x7d, 0x84, 0x4a, 0xb5, 0x5e, 0xb4, 0x48, 0xf4, 0x3e, 0x4c, 0x26, 0xa7, 0x49, 0x30,
	0x99, 0x09, 0x33, 0x53, 0x10, 0x7c, 0x19, 0x11, 0x7c, 0x4f, 0xe7, 0x4f, 0x23, 0xa8, 0xf4, 0x2a,
	0x9c, 0xef, 0x77, 0xce, 0xe4, 0x9b, 0x93, 0xc0, 0xf1, 0x42, 0x4a, 0x21, 0x97, 0x94, 0xe7, 0x75,
	0xc5, 0x0b, 0xd2, 0x4a, 0xa1, 0x45, 0xd4, 0x6b, 0xb3, 0xc9, 0x5b, 0x00, 0xf1, 0x83, 0xa6, 0xec,
	0xe9, 0x51, 0x52, 0x86, 0x8b, 0x1a, 0x1b, 0xe4, 0x7a, 0x85, 0x4a, 0xd1, 0x02, 0xa3, 0x4b, 0x38,
	0xc8, 0x91, 0xd5, 0x54, 0x9a, 0x99, 0xd4, 0x3c, 0x95, 0x8a, 0x83, 0x8b, 0x60, 0x1a, 0x26, 0xff,
	0x3f, 0xf1, 0xb5, 0xa5, 0xd1, 0x39, 0x0c, 0x1b, 0xd4, 0xa5, 0xc8, 0x53, 0x4e, 0x1b, 0x8c, 0x7b,
	0xae, 0x09, 0x3c, 0x5a, 0x1b, 0x12, 0x8d, 0x21, 0xdc, 0x54, 0x35, 0xfa, 0xb8, 0xef, 0xe2, 0xbf,
	0x16, 0xb8, 0xd0, 0x4c, 0x1b, 0x2b, 0x13, 0x6e, 0x9b, 0x0c, 0x65, 0xfc, 0xcb, 0xc4, 0x83, 0x04,
	0x2c, 0x5a, 0x3b, 0x32, 0x79, 0x0f, 0x60, 0x74, 0x8b, 0x1c, 0x65, 0xc5, 0x16, 0xcf, 0x0c, 0x5b,
	0x5d, 0x09, 0xde, 0x39, 0x9e, 0x01, 0x38, 0x33, 0x7f, 0xb4, 0xd7, 0x0b, 0x1d, 0x71, 0x67, 0xc7,
	0xf0, 0xa7, 0xf1, 0x9d, 0x3b, 0xab, 0xae, 0xb4, 0x83, 0x68, 0x97, 0x92, 0x56, 0x7c, 0x23, 0x9c,
	0xd3, 0xbf, 0x24, 0x74, 0xe4, 0xce, 0x80, 0x68, 0x06, 0x03, 0x6d, 0x57, 0x62, 0x74, 0xfa, 0xd3,
	0xe1, 0xec, 0x94, 0xb4, 0x19, 0xd9, 0xb7, 0xa8, 0xc4, 0xb7, 0x4e, 0x5e, 0x60, 0x74, 0x23, 0x24,
	0x56, 0x05, 0xff, 0xa1, 0x79, 0x02, 0xbf, 0x95, 0xd8, 0x4a, 0xd6, 0x29, 0xee, 0xaa, 0x68, 0x09,
	0x47, 0x85, 0xbf, 0x59, 0x8a, 0xdd, 0x8c, 0x33, 0x1d, 0xce, 0xc6, 0xf6, 0x95, 0x7b, 0xae, 0x9d,
	0x1c, 0x16, 0xdf, 0x82, 0xf9, 0x0a, 0xae, 0x84, 0x2c, 0x08, 0x6d, 0x29, 0x2b, 0x91, 0x94, 0x34,
	0x17, 0xa2, 0x25, 0x65, 0x46, 0x15, 0x12, 0x65, 0x2a, 0xcc, 0xfd, 0x57, 0xcf, 0xb6, 0x1b, 0xe2,
	0x66, 0xa9, 0xc6, 0x7c, 0xfe, 0xf5, 0xbf, 0xb8, 0xb7, 0x0d, 0x6a, 0x19, 0xbc, 0x06, 0xc1, 0x47,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xcc, 0xf2, 0x17, 0xf4, 0x32, 0x02, 0x00, 0x00,
}
